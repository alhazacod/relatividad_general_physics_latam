

# This file was *autogenerated* from the file punto_a.sage
from sage.all_cmdline import *   # import sage library

_sage_const_4 = Integer(4); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3)
M = Manifold(_sage_const_4 , 'M', latex_name=r'\mathscr{M}', structure='Lorentzian')
X = M.chart(r"t r:(0,+oo) th:(0,pi):\theta ph:(0,2*pi):\varphi:periodic", names=('t', 'r', 'th', 'ph',)); (t, r, th, ph,) = X._first_ngens(4)

m = var('m')
assume(m>=_sage_const_0 )

Q = var('Q')
assume(abs(Q)<m)

fr = _sage_const_1  - _sage_const_2 *m/r + Q**_sage_const_2 /r**_sage_const_2 

g = M.metric()

g[_sage_const_0 ,_sage_const_0 ] = -fr
g[_sage_const_1 ,_sage_const_1 ] = _sage_const_1 /fr
g[_sage_const_2 ,_sage_const_2 ] = r**_sage_const_2 
g[_sage_const_3 ,_sage_const_3 ] = r**_sage_const_2 *sin(th)**_sage_const_2 

print(g.display())
print(f'\nR^(mu nu) = {(g.ricci()).display()}')
print((g.ricci()).display())

